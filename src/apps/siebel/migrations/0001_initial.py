# Generated by Django 2.2.9 on 2022-12-26 21:30

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('paywall', '__first__'),
        ('ubigeo', '0001_initial'),
        ('pagoefectivo', '__first__'),
        ('piano', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommandSiebel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('date', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ('-created',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoadProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('id_profile', models.CharField(blank=True, max_length=100, null=True)),
                ('arc_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ('-created',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoadTransactionsIdSiebel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('transaction_id', models.TextField(blank=True, null=True)),
                ('tipo', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ('-created',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('state', models.BooleanField(default=True, verbose_name='State')),
                ('delivery', models.IntegerField(blank=True, null=True, verbose_name='Delivery')),
                ('log_type', models.CharField(max_length=64, verbose_name='Tipo')),
                ('log_request', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Request')),
                ('log_response', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Response')),
            ],
            options={
                'verbose_name': 'Log Siebel',
                'verbose_name_plural': 'Logs Siebel',
            },
        ),
        migrations.CreateModel(
            name='PendingSendSiebel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('cliente', models.TextField(blank=True, null=True)),
                ('ov', models.TextField(blank=True, null=True)),
                ('conciliation', models.TextField(blank=True, null=True)),
                ('log_response', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-created',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiebelAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.PositiveSmallIntegerField(blank=True, choices=[(2, 'Alta'), (6, 'Baja'), (4, 'Suspensión'), (8, 'Actualización')], null=True, verbose_name='Tipo de Envio')),
                ('payload', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Datos')),
                ('result', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Respuesta')),
                ('hits', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='Numero de intentos')),
                ('status_ok', models.BooleanField(blank=True, choices=[(True, 'Completado'), (False, 'Fallido'), (None, 'Pendiente')], default=None, null=True, verbose_name='estado')),
            ],
        ),
        migrations.CreateModel(
            name='SiebelConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('customer_attempts', models.CharField(blank=True, max_length=10, null=True, verbose_name='Numero de intentos del cliente')),
                ('ov_attempts', models.CharField(blank=True, max_length=10, null=True, verbose_name='Numero de intentos la orden de venta')),
                ('conciliation_attempts', models.CharField(blank=True, max_length=10, null=True, verbose_name='Numero de intentos del pago')),
                ('state', models.BooleanField(default=False, verbose_name='Estado')),
                ('days_ago', models.IntegerField(blank=True, null=True, verbose_name='Dias atrás')),
                ('blocking', models.BooleanField(default=False, verbose_name='Bloqueo de envio')),
            ],
            options={
                'verbose_name': 'Siebel Configuración',
                'verbose_name_plural': '[Config] Envio a Siebel',
            },
        ),
        migrations.CreateModel(
            name='TipoUrbanizacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipurb_nombre', models.CharField(max_length=32, verbose_name='nombre')),
                ('tipurb_codigo', models.CharField(max_length=8, verbose_name='codigo')),
                ('estado', models.IntegerField(choices=[(1, 'Activo'), (0, 'Inactivo')], default=1, verbose_name='estado')),
            ],
            options={
                'verbose_name': 'Tipo urbanización',
                'verbose_name_plural': 'Tipos urbanización',
            },
        ),
        migrations.CreateModel(
            name='TipoVia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipvia_nombre', models.CharField(max_length=32, verbose_name='nombre')),
                ('tipvia_codigo', models.CharField(max_length=8, unique=True, verbose_name='codigo')),
                ('estado', models.IntegerField(choices=[(1, 'Activo'), (0, 'Inactivo')], default=1, verbose_name='estado')),
            ],
            options={
                'verbose_name': 'Tipo vía',
                'verbose_name_plural': 'Tipos vías',
            },
        ),
        migrations.CreateModel(
            name='Urbanizacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urb_nombre', models.CharField(max_length=256, verbose_name='nombre')),
                ('estado', models.IntegerField(choices=[(1, 'Activo'), (0, 'Inactivo')], default=1, verbose_name='estado')),
                ('tipurb', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='TipourbTipurb', to='siebel.TipoUrbanizacion', verbose_name='tipo urbanizacion')),
                ('ubigeo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='UrbanizacionUbigeo', to='ubigeo.Ubigeo', verbose_name='ubigeo')),
            ],
            options={
                'verbose_name': 'Urbanización',
                'verbose_name_plural': 'Urbanizaciones',
            },
        ),
        migrations.CreateModel(
            name='Via',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('via_nombre', models.CharField(max_length=256, verbose_name='nombre')),
                ('estado', models.IntegerField(choices=[(1, 'Activo'), (0, 'Inactivo')], default=1, verbose_name='estado')),
                ('tipvia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='viaTipvia', to='siebel.TipoVia', verbose_name='tipo via')),
            ],
            options={
                'verbose_name': 'Vía',
                'verbose_name_plural': 'Vías',
            },
        ),
        migrations.CreateModel(
            name='UrbanizacionVia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.IntegerField(choices=[(1, 'Activo'), (0, 'Inactivo')], default=1, verbose_name='estado')),
                ('ubigeo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relatedUbiUrbVia', to='ubigeo.Ubigeo')),
                ('urb', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relatedUrbviaUrb', to='siebel.Urbanizacion')),
                ('via', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relatedUrbviaVia', to='siebel.Via')),
            ],
            options={
                'verbose_name': 'Urbanización Via Ubigeo',
                'verbose_name_plural': 'Urbanización Via Ubigeo',
            },
        ),
        migrations.CreateModel(
            name='UrbanizacionUbigeo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.IntegerField(choices=[(1, 'Activo'), (0, 'Inactivo')], default=1, verbose_name='estado')),
                ('ubigeo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relatedUbiUrb', to='ubigeo.Ubigeo')),
                ('urb', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relatedUrbUbi', to='siebel.Urbanizacion')),
            ],
            options={
                'verbose_name': 'Urbanización ubigeo',
                'verbose_name_plural': 'Urbanización ubigeo',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionExclude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('subscription', models.CharField(blank=True, max_length=40, null=True, verbose_name='Suscripción')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Descripción')),
                ('siebel_configuration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='siebel.SiebelConfiguration')),
            ],
            options={
                'verbose_name': 'Suscripcion a excluir en el envio de Siebel',
                'verbose_name_plural': '[Config] Suscripciones a excluir en el envio de Siebel',
            },
        ),
        migrations.CreateModel(
            name='SiebelSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('siebel_delivery', models.IntegerField(blank=True, null=True, verbose_name='Siebel Delivery')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(2, 'Pendiente'), (4, 'Activo'), (6, 'Suspendido'), (8, 'Desactivado')], null=True, verbose_name='Estado')),
                ('subscription', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='paywall.Subscription', verbose_name='Subscription')),
            ],
            options={
                'ordering': ('-created',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiebelLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, null=True, verbose_name='API')),
                ('request_text', models.TextField(blank=True, null=True, verbose_name='Envío')),
                ('response_text', models.TextField(blank=True, null=True, verbose_name='Respuesta')),
                ('response_code', models.SmallIntegerField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('siebel_action', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='siebel.SiebelAction', verbose_name='Siebel Action')),
            ],
            options={
                'verbose_name': 'Siebel Log',
                'verbose_name_plural': 'Siebel Log',
            },
        ),
        migrations.CreateModel(
            name='SiebelConfirmationPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('nro_renovacion', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número de renovación')),
                ('cod_interno_comprobante', models.IntegerField(blank=True, null=True, verbose_name='Codigo interno de Comprobante')),
                ('folio_sunat', models.CharField(blank=True, max_length=20, null=True, verbose_name='Folio Sunat')),
                ('monto', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Monto total del comprobante Generado')),
                ('fecha_de_emision', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de impresión del comprobante')),
                ('code_ente', models.IntegerField(blank=True, null=True, verbose_name='Codigo Ente')),
                ('cod_delivery', models.IntegerField(blank=True, null=True, verbose_name='Codigo Delivery')),
                ('num_liquidacion', models.CharField(blank=True, max_length=60, null=True, verbose_name='Número de Liquidación')),
                ('log_response', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Response')),
                ('cip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='siebel_confirmation_cip', to='pagoefectivo.CIP', verbose_name='CIP')),
                ('operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='siebel_operation', to='paywall.Operation', verbose_name='Confirmacion de Pago')),
            ],
            options={
                'verbose_name': 'Confirmacion de Pago',
                'verbose_name_plural': 'Confirmacion de Pagos',
            },
        ),
        migrations.AddField(
            model_name='siebelaction',
            name='siebel_subscription',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='siebel.SiebelSubscription', verbose_name='Suscripción Club'),
        ),
        migrations.CreateModel(
            name='ReasonExclude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('reason', models.CharField(blank=True, max_length=100, null=True, verbose_name='Razón')),
                ('siebel_configuration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='siebel.SiebelConfiguration')),
            ],
            options={
                'verbose_name': 'Razon a excluir al envio de Siebel',
                'verbose_name_plural': '[Config] Razones a excluir al envio(Motivo de termino de suscripción)',
            },
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('state', models.BooleanField(default=True, verbose_name='State')),
                ('rate_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Name')),
                ('siebel_id', models.IntegerField(null=True, verbose_name='Siebel ID')),
                ('siebel_code', models.CharField(blank=True, max_length=64, null=True, verbose_name='Siebel Code')),
                ('rate_neto', models.DecimalField(decimal_places=2, max_digits=15, null=True, verbose_name='Neto')),
                ('rate_igv', models.DecimalField(decimal_places=2, max_digits=15, null=True, verbose_name='IGV')),
                ('rate_total', models.DecimalField(decimal_places=2, max_digits=15, null=True, verbose_name='Total')),
                ('siebel_code_promo', models.CharField(blank=True, max_length=128, null=True, verbose_name='Siebel Promo')),
                ('type', models.IntegerField(choices=[(1, 'Promoción'), (0, 'Precio Regular'), (2, 'Promoción Indefinida')], default=0, verbose_name='Tipo')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='Duración')),
                ('billing_frequency', models.IntegerField(blank=True, choices=[(1, 'Mensual'), (2, 'Semestral'), (3, 'Anual'), (4, 'Trimestral')], null=True, verbose_name='Frecuencia de cobro')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rates', to='paywall.Plan', verbose_name='Plan')),
            ],
            options={
                'verbose_name': 'Tarifa',
                'ordering': ('rate_total',),
            },
        ),
        migrations.CreateModel(
            name='LogUnsubscribePiano',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('siebel_hits', models.IntegerField(default=0, verbose_name='Intentos a Siebel')),
                ('siebel_request', models.TextField(blank=True, null=True)),
                ('siebel_response', models.TextField(blank=True, null=True)),
                ('sent_to_siebel', models.NullBooleanField(verbose_name='Enviado a Siebel')),
                ('subscription_low', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='log_unsubscribe_piano_siebel', to='piano.LowSubscriptions', verbose_name='Subscription')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LogSiebelPaymentPiano',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('state', models.CharField(blank=True, choices=[('error', 'Error'), ('successful', 'Successful'), ('repetido', 'Conciliación')], max_length=64, null=True, verbose_name='State')),
                ('log_request', models.TextField(blank=True, null=True, verbose_name='Request')),
                ('log_response', models.TextField(blank=True, null=True, verbose_name='Response')),
                ('error_code', models.CharField(blank=True, max_length=64, null=True, verbose_name='Error code')),
                ('fecha', models.DateTimeField(auto_now_add=True, null=True)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='piano.Transaction')),
            ],
            options={
                'verbose_name': '[Piano] Log_pago',
                'verbose_name_plural': '[Piano] Logs_pago',
            },
        ),
        migrations.CreateModel(
            name='LogSiebelOvPiano',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('state', models.CharField(choices=[('error', 'Error'), ('successful', 'Successful'), ('repetido', 'Conciliación')], max_length=64, verbose_name='State')),
                ('log_request', models.TextField(blank=True, null=True, verbose_name='Request')),
                ('log_response', models.TextField(blank=True, null=True, verbose_name='Response')),
                ('error_code', models.CharField(blank=True, max_length=64, null=True, verbose_name='Error code')),
                ('fecha', models.DateTimeField(auto_now_add=True, null=True)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='piano.Transaction')),
            ],
            options={
                'verbose_name': '[Piano] Log_siebel_ov',
                'verbose_name_plural': '[Piano] Logs_siebel_ov',
            },
        ),
        migrations.CreateModel(
            name='LogSiebelOvPE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('state', models.CharField(choices=[('error', 'Error'), ('successful', 'Successful'), ('repetido', 'Conciliación')], max_length=64, verbose_name='State')),
                ('log_request', models.TextField(blank=True, null=True, verbose_name='Request')),
                ('log_response', models.TextField(blank=True, null=True, verbose_name='Response')),
                ('error_code', models.CharField(blank=True, max_length=64, null=True, verbose_name='Error code')),
                ('fecha', models.DateTimeField(auto_now_add=True, null=True)),
                ('cip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pagoefectivo.CIP')),
            ],
            options={
                'verbose_name': '[Pago Efectivo] Log_siebel_ov',
                'verbose_name_plural': '[Pago Efectivo] Logs_siebel_ov',
            },
        ),
        migrations.CreateModel(
            name='LogSiebelOv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('state', models.CharField(choices=[('error', 'Error'), ('successful', 'Successful'), ('repetido', 'Conciliación')], max_length=64, verbose_name='State')),
                ('log_request', models.TextField(blank=True, null=True, verbose_name='Request')),
                ('log_response', models.TextField(blank=True, null=True, verbose_name='Response')),
                ('error_code', models.CharField(blank=True, max_length=64, null=True, verbose_name='Error code')),
                ('fecha', models.DateTimeField(auto_now_add=True, null=True)),
                ('operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='paywall.Operation')),
            ],
            options={
                'verbose_name': 'Log_siebel_ov',
                'verbose_name_plural': 'Logs_siebel_ov',
            },
        ),
        migrations.CreateModel(
            name='LogSiebelConciliacionPE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('state', models.CharField(blank=True, choices=[('error', 'Error'), ('successful', 'Successful'), ('repetido', 'Conciliación')], max_length=64, null=True, verbose_name='State')),
                ('log_request', models.TextField(blank=True, null=True, verbose_name='Request')),
                ('log_response', models.TextField(blank=True, null=True, verbose_name='Response')),
                ('error_code', models.CharField(blank=True, max_length=64, null=True, verbose_name='Error code')),
                ('fecha', models.DateTimeField(auto_now_add=True, null=True)),
                ('cip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pagoefectivo.CIP')),
            ],
            options={
                'verbose_name': '[Pago Efectivo] Log_siebel_conciliacion',
                'verbose_name_plural': '[Pago Efectivo] Logs_siebel_conciliacion',
            },
        ),
        migrations.CreateModel(
            name='LogSiebelConciliacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('state', models.CharField(blank=True, choices=[('error', 'Error'), ('successful', 'Successful'), ('repetido', 'Conciliación')], max_length=64, null=True, verbose_name='State')),
                ('log_request', models.TextField(blank=True, null=True, verbose_name='Request')),
                ('log_response', models.TextField(blank=True, null=True, verbose_name='Response')),
                ('error_code', models.CharField(blank=True, max_length=64, null=True, verbose_name='Error code')),
                ('fecha', models.DateTimeField(auto_now_add=True, null=True)),
                ('log_recurrence_request', models.TextField(blank=True, null=True, verbose_name='Request Recurrence')),
                ('log_recurrence_response', models.TextField(blank=True, null=True, verbose_name='Response Recurrence')),
                ('type', models.CharField(blank=True, choices=[('web', 'WEB'), ('recurrence', 'RECURRENCE')], max_length=64, null=True, verbose_name='Tipo')),
                ('operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='paywall.Operation')),
            ],
            options={
                'verbose_name': 'Log_siebel_conciliacion',
                'verbose_name_plural': 'Logs_siebel_conciliacion',
            },
        ),
        migrations.CreateModel(
            name='LogSiebelClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('state', models.CharField(choices=[('error', 'Error'), ('successful', 'Successful'), ('repetido', 'Conciliación')], max_length=64, verbose_name='State')),
                ('log_request', models.TextField(blank=True, null=True, verbose_name='Request')),
                ('log_response', models.TextField(blank=True, null=True, verbose_name='Response')),
                ('email', models.CharField(blank=True, max_length=128, null=True, verbose_name='Email')),
                ('error_code', models.CharField(blank=True, max_length=64, null=True, verbose_name='Error code')),
                ('fecha', models.DateTimeField(auto_now_add=True, null=True)),
                ('payment_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='PaymentProfile', to='paywall.PaymentProfile', verbose_name='Payment Profile')),
            ],
            options={
                'verbose_name': 'Log_client_siebel',
                'verbose_name_plural': 'Logs_client_siebel',
            },
        ),
        migrations.CreateModel(
            name='LogRenovationPiano',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('siebel_hits', models.IntegerField(default=0, verbose_name='Intentos a Siebel')),
                ('siebel_request', models.TextField(blank=True, null=True)),
                ('siebel_response', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, choices=[('error', 'Error'), ('successful', 'Successful'), ('repetido', 'Conciliación')], max_length=64, null=True, verbose_name='State')),
                ('error_code', models.CharField(blank=True, max_length=64, null=True, verbose_name='Error code')),
                ('fecha', models.DateTimeField(auto_now_add=True, null=True)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='piano.Transaction')),
            ],
            options={
                'verbose_name': '[Piano] LogRenovationPiano',
                'verbose_name_plural': '[Piano] LogRenovationPiano',
            },
        ),
        migrations.CreateModel(
            name='LogArcUnsubscribe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('siebel_hits', models.IntegerField(default=0, verbose_name='Intentos a Siebel')),
                ('siebel_request', models.TextField(blank=True, null=True)),
                ('siebel_response', models.TextField(blank=True, null=True)),
                ('sent_to_siebel', models.NullBooleanField(verbose_name='Enviado a Siebel')),
                ('subscription', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='log_arc_unsubscribe_siebel', to='paywall.Subscription', verbose_name='Subscription')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArcUnsubscribe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado')),
                ('last_updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Modificado')),
                ('siebel_hits', models.IntegerField(default=0, verbose_name='Intentos a Siebel')),
                ('siebel_request', models.TextField(blank=True, null=True)),
                ('siebel_response', models.TextField(blank=True, null=True)),
                ('sent_to_siebel', models.NullBooleanField(verbose_name='Enviado a Siebel')),
                ('subscription', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='siebel_arc_unsubscribe', to='paywall.Subscription', verbose_name='Subscription')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
